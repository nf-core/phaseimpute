/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    // Configuration for the glimpse1 imputation subworkflow

    // Impute with GLIMPSE1
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE1:.*' {
        publishDir = [ enabled: false ]
        tag = {"${meta.id} ${meta.chr}"}
    }

    // Call the variants before imputation
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE1:BAM_GL_BCFTOOLS:.*' {
        publishDir = [ enabled: false ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE1:BAM_GL_BCFTOOLS:GAWK' {
        ext.args2  = "'NR>1 { split(\$1, a, \"[:-_]\"); print a[1], \$2, \$3 \",\" \$4 }'"
        ext.prefix = { "${meta.id}" }
        ext.suffix = "tsv"
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE1:BAM_GL_BCFTOOLS:BCFTOOLS_MPILEUP' {
        ext.args = [
            "-I",
            "-E",
            "-a 'FORMAT/DP'"
        ].join(' ')
        ext.args2 = [
            "-Aim",
            "-C alleles"
        ].join(' ')
        ext.prefix = { "${meta.id}" }
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE1:BAM_GL_BCFTOOLS:BCFTOOLS_ANNOTATE' {
        ext.args   = ["--set-id '%CHROM:%POS:%REF:%ALT'", "-Oz", "--write-index=tbi"].join(' ')
        ext.prefix = { "${meta.id}.annotate" }
    }

    // Impute the variants
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE1:GLIMPSE_PHASE' {
        ext.args   = ["--impute-reference-only-variants"].join(' ')
        ext.prefix = { "${meta.id}_${meta.chunk.replace(':','_')}_phase" }
        ext.suffix = "bcf"
        publishDir = [ enabled: false ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE1:BCFTOOLS_INDEX_2' {
        ext.args   = "--tbi"
        publishDir = [ enabled: false ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE1:GLIMPSE_LIGATE' {
        ext.prefix = { "${meta.id}_${meta.chr}_ligate" }
        publishDir = [ enabled: false ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE1:BCFTOOLS_INDEX_2' {
        ext.args   = "--tbi"
        publishDir = [ enabled: false ]
    }

    // Concatenate the imputed chunks
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:CONCAT_GLIMPSE1:.*' {
        publishDir = [
            path: { "${params.outdir}/imputation/glimpse1/concat" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:CONCAT_GLIMPSE1:BCFTOOLS_CONCAT' {
        ext.args   = ["--ligate", "--output-type z"].join(' ')
        ext.prefix = { "${meta.id}.glimpse1" }
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:CONCAT_GLIMPSE1:BCFTOOLS_INDEX' {
        ext.args     = "--tbi"
    }
}
