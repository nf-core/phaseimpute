/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CHR_CHECK:.*' {
        publishDir = [
            path: { "${params.outdir}/prep_panel/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: false
        ]
        tag = {"${meta.id} ${meta.chr}"}
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CHR_CHECK:VCF_CHR_RENAME:BCFTOOLS_ANNOTATE' {
        ext.args   = ["-Oz", "--no-version", "--write-index=tbi"].join(' ')
        ext.prefix = { "${meta.id}_chrrename" }
        publishDir = [ enabled: false ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CHR_CHECK:VCF_CHR_RENAME:GAWK' {
        ext.args2  = 'BEGIN {FS="\\t"} NR==1 { if ($1 ~ /^chr/) { col1=""; col2="chr" } else { col1="chr"; col2="" } } { sub(/^chr/, "", $1); if ($1 ~ /^[0-9]+|[XYMT]$/) print col1$1, col2$1; else print $1, $1 }'
        ext.prefix = { "${meta.id}_chrrename" }
        ext.suffix = "txt"
        publishDir = [ enabled: false ]
    }

    // Subworkflow: VCF_NORMALIZE_BCFTOOLS
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_NORMALIZE_BCFTOOLS:.*' {
        publishDir = [ enabled: false ]
        tag = {"${meta.id} ${meta.chr}"}
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_NORMALIZE_BCFTOOLS:BCFTOOLS_NORM' {
        ext.args      = ["-m +any", "--no-version", "--output-type z", "--write-index=tbi"].join(' ')
        ext.prefix    = { "${meta.id}_${meta.chr}_multiallelic" }
        publishDir = [ enabled: false ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_NORMALIZE_BCFTOOLS:BCFTOOLS_VIEW' {
        ext.args   = [
            "-v snps", "-m 2", "-M 2",
            params.remove_samples ? "-s^${params.remove_samples}" : '',
            "--output-type z", "--write-index=tbi"
        ].join(' ')
        ext.prefix = { "${meta.id}_${meta.chr}_biallelic_snps" }
        publishDir = [
            path: { "${params.outdir}/prep_panel/normalized" },
            saveAs: { filename -> params.compute_freq ? null : filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_NORMALIZE_BCFTOOLS:VCFLIB_VCFFIXUP' {
        ext.prefix   = { "${meta.id}_${meta.chr}" }
        publishDir = [
            path: { "${params.outdir}/prep_panel/normalized" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_NORMALIZE_BCFTOOLS:BCFTOOLS_INDEX' {
        ext.args     = "--tbi"
        publishDir = [
            path: { "${params.outdir}/prep_panel/normalized" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }

    // Subworkflow: VCF_PHASE_SHAPEIT5
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_PHASE_SHAPEIT5:.*' {
        publishDir = [
            path: { "${params.outdir}/prep_panel/phasing" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: false
        ]
        tag = {"${meta.id} ${meta.chr}"}
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_PHASE_SHAPEIT5:GLIMPSE2_CHUNK' {
        ext.prefix = { "${meta.id}_chunks" }
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_PHASE_SHAPEIT5:SHAPEIT5_PHASECOMMON' {
        ext.prefix = { "${meta.id}_${meta.chunk.replace(':',"_")}_chunks" }
    }

    // Subworkflow: VCF_SITES_EXTRACT_BCFTOOLS
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_SITES_EXTRACT_BCFTOOLS:.*' {
        publishDir = [ enabled: false ]
        tag = {"${meta.id} ${meta.chr}"}
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_SITES_EXTRACT_BCFTOOLS:BCFTOOLS_CONVERT' {
        ext.args = {"--haplegendsample ${meta.id}_${meta.chr}"}
        publishDir = [
            path: { "${params.outdir}/prep_panel/haplegend/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_SITES_EXTRACT_BCFTOOLS:BCFTOOLS_VIEW' {
        ext.args = [
            "-G",
            "-m 2",
            "-M 2",
            "-v snps",
            "--output-type z",
            "--write-index=tbi",
            "--no-version"
        ].join(' ')
        ext.prefix = { "${meta.id}_${meta.chr}_glimpse1_sites" }
        publishDir = [
            path: { "${params.outdir}/prep_panel/sites/vcf/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }

    // Subworkflow: Concat phased panel
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:CONCAT_PANEL:.*' {
        publishDir = [ enabled: false ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:CONCAT_PANEL:BCFTOOLS_CONCAT' {
        ext.args   = ["--ligate", "--output-type z", "--write-index=tbi"].join(' ')
        ext.prefix = { "${meta.id}.panel" }
    }

    // Subworkflow: Make chunks
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CHUNK_GLIMPSE:.*' {
        publishDir = [
            path: { "${params.outdir}/prep_panel/chunks/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
        tag = {"${meta.id} ${meta.chr}"}
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CHUNK_GLIMPSE:GLIMPSE_CHUNK' {
        ext.prefix = { "${meta.id}_${meta.chr}_chunks_glimpse1" }
        publishDir = [
            path: { "${params.outdir}/prep_panel/chunks/glimpse1/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CHUNK_GLIMPSE:GLIMPSE2_CHUNK' {
        ext.prefix    = { "${meta.id}_${meta.chr}_chunks_glimpse2" }
        publishDir = [
            path: { "${params.outdir}/prep_panel/chunks/glimpse2/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CHUNK_GLIMPSE:GLIMPSE2_SPLITREFERENCE' {
        ext.prefix    = { "${meta.id}_${meta.chr}_chunks_glimpse2" }
        publishDir = [
            path: { "${params.outdir}/prep_panel/chunks/glimpse2/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }

}
