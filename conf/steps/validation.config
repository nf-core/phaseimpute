/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    // Configuration for the validation step

    // Compute genotype likelihoods for the truth set
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GL_TRUTH:.*' {
        publishDir = [ enabled: false ]
        tag = {"${meta.id} ${meta.chr}"}
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GL_TRUTH:GAWK' {
        ext.args2  = "'NR>1 { split(\$1, a, \"[:-_]\"); print a[1], \$2, \$3 \",\" \$4 }'"
        ext.prefix = { "${meta.id}" }
        ext.suffix = "tsv"
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GL_TRUTH:BCFTOOLS_MPILEUP' {
        ext.args = [
            "-I",
            "-E",
            "-a 'FORMAT/DP'"
        ].join(' ')
        ext.args2 = [
            "-Aim",
            "-C alleles"
        ].join(' ')
        ext.prefix = { "${meta.id}_truth.call" }
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GL_TRUTH:BCFTOOLS_MERGE' {
        ext.args = [
            "--write-index=tbi",
        ].join(' ')
        ext.prefix = { "${meta.id}" }
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GL_TRUTH:BCFTOOLS_ANNOTATE' {
        ext.args   = ["--set-id '%CHROM:%POS:%REF:%ALT'", "-Oz", "--write-index=tbi"].join(' ')
        ext.prefix = { "${meta.id}_${meta.chr}.annotate" }
    }

    // Concatenate the truth set
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:CONCAT_TRUTH:.*' {
        ext.prefix = { "${meta.id}.A-truth" }
        publishDir = [
            path: { "${params.outdir}/validation/concat" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:CONCAT_TRUTH:BCFTOOLS_CONCAT' {
        ext.args   = ["--ligate", "--output-type z", "--write-index=tbi"].join(' ')
    }

    // Split by samples
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:SPLIT_TRUTH:.*' {
        publishDir = [
            path: { "${params.outdir}/validation/samples" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:SPLIT_TRUTH:BCFTOOLS_PLUGINSPLIT' {
        ext.args   = ["--output-type z", "--write-index=tbi"].join(' ')
        ext.prefix = { "${meta.id}" }
        ext.suffix = ".truth"
    }

    // Validation subworkflow
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:.*' {
        publishDir = [
            path: { "${params.outdir}/validation/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        tag = {"${meta.id} ${meta.panel} ${meta.tools}"}
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:GLIMPSE2_CONCORDANCE' {
        ext.prefix = { "${meta.id}${meta.panel ? '_P' + meta.panel : ''}${meta.tools ? '_T' + meta.tools : ''}.concordance" }
        publishDir = [ enabled: false ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:GUNZIP' {
        ext.prefix = { "${meta.id}${meta.panel ? '_P' + meta.panel : ''}${meta.tools ? '_T' + meta.tools : ''}" }
        publishDir = [ enabled: false ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:ADD_COLUMNS' {
        ext.prefix = { "${meta.id}${meta.panel ? '_P' + meta.panel : ''}${meta.tools ? '_T' + meta.tools : ''}_SNP" }
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:GAWK' {
        ext.args2  = "'(NR == 1) || (FNR > 1)'" // Skip header line
        ext.suffix = { "txt" }
        tag = {"Test Quality"}
    }
}
